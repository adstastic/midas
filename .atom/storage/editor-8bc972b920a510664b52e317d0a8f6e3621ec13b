{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":52,"width":1680,"height":974,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/cath/homes2/zcapamu/webserver/pv-chopping"],"buffers":[{"text":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\n  <title>CATH: PDB Chopping Viewer</title>\n</head>\n<body>\n  <!-- ========= -->\n  <!-- Your HTML -->\n  <!-- ========= -->\n\n  <!-- ========= -->\n  <!-- Libraries -->\n  <!-- ========= -->\n  <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\" type=\"text/javascript\"></script>\n  <script src=\"http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js\" type=\"text/javascript\"></script>\n  <script src=\"http://cdnjs.cloudflare.com/ajax/libs/backbone.js/1.2.1/backbone-min.js\" type=\"text/javascript\"></script>\n  <script src=\"http://cdnjs.cloudflare.com/ajax/libs/backbone-localstorage.js/1.1.16/backbone.localStorage-min.js\" type=\"text/javascript\"></script>\n  <script src=\"http://cdnjs.cloudflare.com/ajax/libs/backbone-relational/0.9.0/backbone-relational.min.js\" type=\"text/javascript\"></script>\n\n<!-- Latest compiled and minified CSS\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\">\n-->\n\n<!-- Optional theme -->\n<link rel=\"stylesheet\" href=\"https://bootswatch.com/lumen/bootstrap.min.css\">\n\n<!-- Latest compiled and minified JavaScript -->\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js\"></script>\n\n\n  <script type='text/javascript' src='./bio-pv-1.5.0/bio-pv.min.js'></script>\n\n\n\n<style>\n#viewer-container {\n}\n\nul.structure-object-list {\n\tlist-style-type: none;\n\tpadding: 0;\n\tmargin: 0;\n}\n\n.structure-object-item-color {\n\tfloat: left;\n\twidth: 16px;\n\theight: 16px;\n\tborder: 1px solid #666;\n\tmargin-right: 10px;\n}\n</style>\n\n  <div id=\"cv-container\"></div>\n\n  <div class=\"container\">\n  \t<div class=\"page-header\">\n  \t\t<h1>CATH Chopping Viewer</h1>\n\t</div>\n\n  \t<div class=\"row\">\n  \t\t<div class=\"col-md-8\">\n  \t\t\t<div class=\"panel panel-default\">\n\t  \t\t\t<div class=\"panel-heading\">\n\t  \t\t\t\t3D Structure\n\t  \t\t\t</div>\n\t  \t\t\t<div class=\"panel-body\">\n\t\t\t\t\t<div id=\"cv-pdb-viewer\"></div>\n\t  \t\t\t</div>\n          <div class=\"panel-footer\">\n\t\t\t\t\t<div id=\"cv-pdb-info\"></div>\n\t  \t\t\t</div>\n  \t\t\t</div>\n  \t\t</div>\n  \t\t<div class=\"col-md-4\">\n  \t\t\t<div class=\"panel panel-default\">\n\t  \t\t\t<div class=\"panel-heading\">\n\t  \t\t\t\tInfo\n\t  \t\t\t</div>\n\t  \t\t\t<div class=\"panel-body\">\n  \t\t\t\t\t<div id=\"cv-pdb-objects\">\n  \t\t\t\t\t</div>\n  \t\t\t\t</div>\n  \t\t\t</div>\n  \t\t\t<div class=\"panel panel-default\">\n\t  \t\t\t<div class=\"panel-heading\">\n\t  \t\t\t\tSelection\n\t  \t\t\t</div>\n\t  \t\t\t<div class=\"panel-body\">\n  \t\t\t\t\t<!--<div id=\"cv-pdb-focus\"></div>-->\n            <div id='picked-atom-name' style='text-align:center;'>&nbsp;\n            </div>\n  \t\t\t\t</div>\n  \t\t\t</div>\n  \t\t</div>\n  \t</div>\n  \t<div id=\"sequence-container\"></div>\n  </div>\n\n\n  <!-- =============== -->\n  <!-- Javascript code -->\n  <!-- =============== -->\n\n  <script type=\"text/javascript\">\n\n  // Existing code begins here\n\tvar pvOpts = {\n\t\twidth: 'auto',\n\t\theight: 600,\n\t\tantialias: true,\n\t\tquality: 'medium'\n\t};\n\n\tvar app = {};\n\n\tapp.Model = {};\n\tapp.View  = {};\n\tapp.Collection = {};\n\n\t// svn:/update/trunk/ddmake/colourlist.txt (got bored at 'gold')\n\tvar domainColors = ['blue', 'red', 'green', 'yellow', 'pink', 'grey', 'purple', '#9cf', '#8e7', '#f80', '#0ff', '#863', '#385', '#f07', '#f0f', '#fa8', '#ee8', '#f90' ];\n\n\tconsole.log( \"DEFINE app.Model.PdbInfo\" );\n\n\tapp.Model.PdbInfo = Backbone.Model.extend({\n\t\tdefaults: {\n\t\t\theader: null,\n\t\t\ttitle: null,\n\t\t\tkeywords: null,\n\t\t\texpdata: null,\n\t\t\tauthor: null,\n\t\t\tjournal_author: null,\n\t\t\tjournal_title: null,\n\t\t\tjournal_ref: null,\n\t\t\tjournal_doi: null\n\t\t},\n\t\tparseFromPdb: function(data) {\n\t\t\tvar line,\n\t\t\t\tre_line = /^([A-Z]+)\\s+(.*?)$/mg,\n\t\t\t\tre_jrnl = /^([A-Z]+)\\s+/;\n\n\t\t\tvar h = this;\n\n\t\t\tPDB: while (line = re_line.exec(data)) {\n\t\t\t\tvar key = line[1],\n\t\t\t\t\tcontent = line[2].trim();\n\n\t\t\t\tswitch (key) {\n\t\t\t\t\tcase 'HEADER':\n\t\t\t\t\t\tvar tmp = h.get('header') || '';\n\t\t\t\t\t\th.set('header', tmp + content);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'TITLE':\n\t\t\t\t\t\tvar tmp = h.get('title') || '';\n\t\t\t\t\t\th.set('title', tmp + content);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'KEYWDS':\n\t\t\t\t\t\tvar tmp = h.get('keywords') || '';\n\t\t\t\t\t\th.set('keywords', tmp + content);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'JRNL':\n\t\t\t\t\t\tvar parts = re_jrnl.exec( content );\n\t\t\t\t\t\tif ( ! parts ) {\n\t\t\t\t\t\t\tconsole.warn(\"Failed to parse journal key from '\" + content + \"' (skipping)\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar jrnl_key = parts[1];\n\t\t\t\t\t\tvar jrnl_content = content.substr(7).trim();\n\t\t\t\t\t\tswitch (jrnl_key) {\n\t\t\t\t\t\t\tcase 'AUTH':\n\t\t\t\t\t\t\t\tvar tmp = h.get('journal_author') || '';\n\t\t\t\t\t\t\t\th.set('journal_author', tmp + jrnl_content);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'TITL':\n\t\t\t\t\t\t\t\tvar tmp = h.get('journal_title') || '';\n\t\t\t\t\t\t\t\th.set('journal_title', tmp + jrnl_content);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'REF':\n\t\t\t\t\t\t\t\tvar tmp = h.get('journal_ref') || '';\n\t\t\t\t\t\t\t\th.set('journal_ref', tmp + jrnl_content);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'DOI':\n\t\t\t\t\t\t\t\tvar tmp = h.get('journal_doi') || '';\n\t\t\t\t\t\t\t\th.set('journal_doi', tmp + jrnl_content);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'ATOM':\n\t\t\t\t\tcase 'REMARK':\n\t\t\t\t\tcase 'SEQRES':\n\t\t\t\t\t\tbreak PDB;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.log( \"pdbInfo: parseFromPdb: \", this );\n\t\t}\n\t});\n\n\tconsole.log( \"DEFINE app.Model.Pdb\" );\n\n\tapp.Model.Pdb = Backbone.Model.extend({\n\t\t//urlRoot: \"/api/data/pdb\",\n\t\turlRoot: \"./pdb\",\n\t\tdefaults: {\n\t\t\tpdbId: '',\n\t\t\ttitle: '',\n\t\t\tpdbInfo: null,\n\t\t\tpvStructure: null,\n\t\t},\n\t\tload: function( pdbId, callback ) {\n\t\t\tvar url = this.urlRoot + '/' + pdbId;\n\t\t\tvar self = this;\n\t\t\tvar pdbInfo = new app.Model.PdbInfo();\n\n\t\t\tconsole.log( \"pdb.load\", pdbId, url);\n\n\t\t\tself.set({\n\t\t\t\t'pdbId': pdbId,\n\t\t\t\t'title': \"PDB \" + pdbId\n\t\t\t});\n\n\t\t\t$.ajax( url )\n\t\t\t\t.done(function(data) {\n\n\t\t\t\t\tpdbInfo.parseFromPdb(data);\n\n\t\t\t\t\tvar structure = pv.io.pdb( data );\n\n\t\t\t\t\tself.set({\n\t\t\t\t\t\t'pdbInfo': pdbInfo,\n\t\t\t\t\t\t'pvStructure': structure\n\t\t\t\t\t});\n\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tcallback( structure );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t},\n\n\t});\n\n\tconsole.log( \"DEFINE app.Model.StructureObjectSegment\" );\n\n\tapp.Model.StructureObjectSegment = Backbone.RelationalModel.extend({\n\t\turlRoot: '/segment/',\n\t\tdefaults: {\n\t\t\tstart: null,\n\t\t\tend: null,\n\t\t\tchainCode: null,\n\t\t},\n\t\tgetMolView: function(pvStructure) {\n\t\t\tvar chainCode = this.get('chainCode'),\n\t\t\t\tstart = this.get('start'),\n\t\t\t\tend = this.get('end');\n\n\t\t\tif ( start && end ) {\n\t\t\t\tconsole.log( \"selecting residue range\", this.toJSON() );\n\t\t\t\treturn pvStructure.select( { chain: chainCode, rnumRange: [start, end] } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log( \"selecting chain\", this.toJSON() );\n\t\t\t\treturn pvStructure.select( { chain: chainCode } );\n\t\t\t}\n\t\t}\n\t});\n\n\tconsole.log( \"DEFINE app.Collection.StructureObjectSegmentList\" );\n\n\tapp.Collection.StructureObjectSegmentList = Backbone.Collection.extend({\n\t\tmodel: app.Model.StructureObjectSegment,\n\t\tlocalStorage: new Backbone.LocalStorage( 'structure-object-segment-list' )\n\t});\n\n\tconsole.log( \"DEFINE app.Model.StructureObjectItem\" );\n\n\tapp.Model.StructureObjectItem = Backbone.RelationalModel.extend({\n\t\trelations: [{\n\t\t\ttype: Backbone.HasMany,\n\t\t\tkey: 'segments',\n\t\t\trelatedModel: app.Model.StructureObjectSegment,\n\t\t\tcollectionType: app.Collection.StructureObjectSegmentList,\n\t\t\treverseRelation: {\n\t\t\t\tkey: 'parent',\n\t\t\t\tincludeInJSON: 'id'\n\t\t\t}\n\t\t}],\n\t\tdefaults: {\n\t\t\tid: null,\n\t\t\tlabel: 'Domain/Chain 1ABC',\n\t\t\tcolor: '#999',\n\t\t\ttype: 'DOMAIN',\n\t\t\tsegments: null,\n\t\t},\n\t});\n\n\tconsole.log( \"DEFINE app.Collection.StructureObjectList\" );\n\n\tapp.Collection.StructureObjectList = Backbone.Collection.extend({\n\n\t\tmodel: app.Model.StructureObjectItem,\n\n\t\tlocalStorage: new Backbone.LocalStorage( 'structure-object-list' ),\n\n\t\tpdbId: null,\n\n\t\tfocusChainCode: null,\n\n\t\tpopulateFromCGIParams: function() {\n\t\t\tvar param = this.parseCgiParam();\n\t\t\tconsole.log( \"setChoppingFromCGIParams.param: \", param );\n\t\t\tvar domains = [];\n\t\t\tvar chainId = param['id'];\n\t\t\tif ( !chainId ) {\n\t\t\t\tconsole.error( \"Failed to get CGI param 'id' (expected PDB chain id)\" )\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar pdbId = chainId.substr(0, 4);\n\t\t\tvar choppingStr = param['chopping'];\n\t\t\tif ( !choppingStr ) {\n\t\t\t\tconsole.error( \"Failed to get CGI param 'chopping' (expected chopping string)\" );\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis.pdbId = pdbId;\n\n\t\t\tthis.populateFromChoppingString( choppingStr );\n\n\t\t\treturn 1;\n\t\t},\n\n\t\tgetChainCodes: function() {\n\t\t\tvar self = this;\n\t\t\tvar chainCodes = [];\n\t\t\tthis.get('domains').forEach(function(dom) {\n\t\t\t\tdom.get('segments').forEach(function(seg) {\n\t\t\t\t\tchainCodes.push( seg.chainCode );\n\t\t\t\t})\n\t\t\t});\n\t\t\tconsole.log( \"getChainCodes\", self, self.domains, chainCodes, _.uniq( chainCodes ) );\n\t\t\treturn _.uniq( chainCodes );\n\t\t},\n\n\t\tpopulateFromChoppingString: function(fullChoppingString) {\n\t\t\tvar self = this;\n\n\t\t\tvar pdbCode  = fullChoppingString.substr(0, 4);\n\t\t\tvar chopping = fullChoppingString.substr(5);\n\t\t\tvar domainsAndFragments = chopping.split(' ');\n\t\t\tvar focusChainCode;\n\n\t\t\tvar segRegexp = /(-?[^\\-]+)-(-?[^\\[]+)\\[(\\S)\\]/;  // 3-23[A] OR -5-123[B] OR 1(A)-234[C]\n\t\t\tvar insertRegexp = /(-?\\d+)\\((\\w)\\)$/;\n\n\t\t\tvar domains = [];\n\n\t\t\tvar domainCount = 1;\n\n\t\t\tdomainsAndFragments.forEach(function(domainStr) {\n\t\t\t\tvar isDomain = domainStr.substr(0, 1) == 'D' ? 1 : 0,\n\t\t\t\t\tsegmentStrings = domainStr.substr(1).split('+'),\n\t\t\t\t\tchainCode;\n\n\t\t\t\t//console.log( \"parseChoppingString.segmentStrings: \", segmentStrings );\n\n\t\t\t\tif ( isDomain ) {\n\n\t\t\t\t\tvar segs = [];\n\n\t\t\t\t\tsegmentStrings.forEach(function(str) {\n\t\t\t\t\t\tvar matches   = str.match( segRegexp );\n\n\t\t\t\t\t\tvar start     = matches[1];\n\t\t\t\t\t\tvar end       = matches[2];\n\n\t\t\t\t\t\tchainCode = matches[3];\n\n\t\t\t\t\t\tfocusChainCode = chainCode;\n\n\t\t\t\t\t\tconsole.log( \"parseChoppingString.segmentString: \", str, matches );\n\n\t\t\t\t\t\tvar m;\n\t\t\t\t\t\tif ( m = start.match( insertRegexp ) ) {\n\t\t\t\t\t\t\tstart = m[1] + m[2];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( m = end.match( insertRegexp ) ) {\n\t\t\t\t\t\t\tend = m[1] + m[2];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsegs.push({\n\t\t\t\t\t\t\tstart:     start,\n\t\t\t\t\t\t\tend:       end,\n\t\t\t\t\t\t\tchainCode: chainCode,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tvar domainId = pdbCode + chainCode + (domainCount < 10 ? '0' : '') + domainCount;\n\n\t\t\t\t\tvar domObj = new app.Model.StructureObjectItem({\n\t\t\t\t\t\tid: domainId,\n\t\t\t\t\t\tcolor: domainColors[domainCount - 1],\n\t\t\t\t\t\tlabel: 'CATH Domain ' + domainId,\n\t\t\t\t\t\ttype: 'DOMAIN',\n\t\t\t\t\t\tsegments: segs\n\t\t\t\t\t});\n\n\t\t\t\t\tself.add( domObj );\n\n\t\t\t\t\tdomainCount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.log( \"Setting focusChainCode\", focusChainCode );\n\t\t\tthis.focusChainCode = focusChainCode;\n\t\t\tconsole.log( \"Set focusChainCode\", this, this.focusChainCode );\n\n\t\t\treturn this;\n\t\t},\n\n\t\tparseCgiParam: function() {\n\t\t\tvar query = window.location.search.substring(1);\n\t\t\tvar qs = query.split('+').join(' ');\n\t\t\tvar params = {},\n\t\t\t\ttokens,\n\t\t\t\tre = /[?&]?([^=]+)=([^&]*)/g;\n\n\t\t\twhile (tokens = re.exec(qs)) {\n\t\t\t\tparams[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n\t\t\t}\n\n\t\t\treturn params;\n\t\t},\n\t});\n\n\tapp.View.PdbInfo = Backbone.View.extend({\n\t\tel: '#cv-pdb-info',\n\t\ttemplate: _.template(\n\t\t\t'<div class=\"viewer-pdb-info\">' +\n\t\t\t\t'<div class=\"pdb-info-title\"><%- title %></div>' +\n\t\t\t\t'<div class=\"pdb-info-ref\">' +\n\t\t\t\t\t'<div class=\"journal-title\"><%- journal_title %></div>' +\n\t\t\t\t\t'<div class=\"journal-author\"><%- journal_author %></div>' +\n\t\t\t\t\t'<div class=\"journal-doi\">doi: <%- journal_doi %></div>' +\n\t\t\t\t'</div>' +\n\t\t\t'</div>'\n\t\t),\n\t\tinitialize: function() {\n\t\t\tconsole.log( \"app.View.PdbInfo\", this );\n\t\t\t//this.listenTo(this.model, 'sync change', this.render);\n\t\t\t//this.model.fetch();\n\t\t\tthis.render();\n\t\t},\n\t\trender: function() {\n\t\t\tconsole.log( \"render\", this, this.model.toJSON() );\n\t\t\tvar html = this.template( this.model.toJSON() );\n\t\t\tthis.$el.html( html );\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tapp.View.StructureObjectItem = Backbone.View.extend({\n\t\ttagName: 'li',\n\t\tclassName: 'structure-object-item',\n\t\ttemplate: _.template(\n\t\t\t'<div class=\"<%- type %>\">' +\n\t\t\t'<span class=\"structure-object-item-color\" style=\"background-color: <%- color %>\"></span> <%- id %> <small>(<%- type %>)</small>' +\n\t\t\t'</div>'\n\t\t),\n\t\tevents: {\n\t\t\t'click .remove': 'onRemove'\n\t\t},\n\t\trender: function() {\n\t\t\tvar html = this.template(this.model.toJSON());\n\t\t\tthis.$el.html(html);\n\t\t\tconsole.log( \"app.View.StructureObjectItem.render\", this.model.toJSON(), this.$el, html );\n\t\t\treturn this;\n\t\t},\n\t\tonRemove: function() {\n\t\t\tthis.model.destroy();\n\t\t}\n\t});\n\n\tapp.View.StructureObjectList = Backbone.View.extend({\n\t\tel: '#cv-pdb-objects',\n\n\t\ttemplate: _.template(\n\t\t\t'<ul class=\"structure-object-list\"></ul>'\n\t\t),\n\n\t\tinitialize: function() {\n\t\t\tconsole.log( \"app.View.Choppings.initialize\" );\n\t\t\tthis.listenTo(this.collection, 'sync change', this.render);\n\n\t\t\tvar html = this.template( this.collection.toJSON() );\n\t\t\tthis.$el.html( html );\n\t\t},\n\n\t\trender: function() {\n\t\t\tconsole.log( \"app.View.Choppings.render\" );\n\n\t\t\tvar $list = this.$('ul.structure-object-list').empty();\n\n\t\t\tthis.collection.each(function(model) {\n\t\t\t\tvar item = new app.View.StructureObjectItem( { model: model } );\n\t\t\t\t$list.append(item.render().$el);\n\t\t\t\tconsole.log( \"app.View.StructureObjectList.render\", model, item, $list );\n\t\t\t}, this);\n\n\t\t\treturn this;\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .create': 'onCreate'\n\t\t},\n\n\t\tonCreate: function() {\n\t\t\tconsole.error( \"Choppings.onCreate: Not yet implemented\" );\n\t\t}\n\t});\n\n\tapp.App = Backbone.View.extend({\n\t\tel: '#cv-container',\n\t\tviewer: null,\n\t\tpdb: null,\n\t\tpdbInfo: null,\n\t\tstructureObjectList: null,\n\t\tstructureObjectView: null,\n\t\tactiveColorer: null,\n\t\tfocusChainCode: null,\n\t\tstyle: 'cartoon',\n\t\t// It's the first function called when this view it's instantiated.\n\t\tinitialize: function(){\n\t\t\tvar self = this;\n\n\t\t\tconsole.log( \"app.App.initialize\", this );\n\n\n      this.viewer = pv.Viewer( document.getElementById('cv-pdb-viewer'), pvOpts );\n\n\t\t\tthis.pdb = new app.Model.Pdb();\n\n\t\t\tthis.structureObjectList = new app.Collection.StructureObjectList();\n\n\t\t\tthis.structureObjectView = new app.View.StructureObjectList({ collection: this.structureObjectList });\n\n\t\t\tthis.setActiveColorer( 'colorByChopping' );\n\n\t\t\tif ( this.structureObjectList.populateFromCGIParams() ) {\n\n\t\t\t\tvar pdbId = this.structureObjectList.pdbId;\n\n\t\t\t\t//console.log( \"cgiChopping\", pdbId, this.activeColorer );\n\n\t\t\t\tthis.pdb.load( pdbId, function(pvStructure) {\n\t\t\t\t\tvar pdbInfoModel = self.pdb.get('pdbInfo');\n\n\t\t\t\t\tself.pdbInfo = new app.View.PdbInfo({ model: pdbInfoModel });\n\n\t\t\t\t\tvar focusChainCode  = self.structureObjectList.focusChainCode;\n\t\t\t\t\tvar allChainCodes   = _.map( pvStructure.chains(), function(ch) { return ch.name(); } );\n\t\t\t\t\tvar otherChainCodes = _.filter( allChainCodes, function(chCode) { return chCode != focusChainCode ? chCode : false; });\n\n\t\t\t\t\tvar bgColor = [ 0.9, 0.9, 0.9, 0.3 ];\n\n\t\t\t\t\t\t\t\t\t\t\totherChainCodes.forEach( function(chainCode) {\n\n\t\t\t\t\t\tvar obj = self.structureObjectList.add({\n\t\t\t\t\t\t\tid: pdbId + chainCode,\n\t\t\t\t\t\t\tlabel: 'Chain ' + chainCode,\n\t\t\t\t\t\t\ttype: 'CHAIN',\n\t\t\t\t\t\t\tcolor: bgColor,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tobj.get('segments').add( { chainCode: chainCode } );\n\t\t\t\t\t});\n\n\t\t\t\t\t//console.log( \"built structure object list: \", self.structureObjectList.toJSON() );\n\n\t\t\t\t\tself.render();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tsetActiveColorer: function(fname) {\n\t\t\tvar func = this[fname];\n\t\t\tif ( typeof func === 'function' ) {\n\t\t\t\tthis.activeColorer = func.bind(this);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.error( \"failed to setActiveColorer as \" + fname + \" (function does not exist: \" + typeof func + \")\" );\n\t\t\t}\n\t\t},\n\t\tgetColorer: function() {\n\t\t\treturn this.activeColorer;\n\t\t},\n\t\tsetStyle: function(fname) {\n\t\t\tvar func = this.viewer[fname];\n\t\t\tif ( typeof func === 'function' ) {\n\t\t\t\tthis.style = fname;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.error( \"failed to setActiveStyler as \" + fname + \" (function does not exist: \" + typeof func + \")\" );\n\t\t\t}\n\t\t},\n\t\tgetStyle: function() {\n\t\t\treturn this.style;\n\t\t},\n\t\tstyleView: function(name, view, options) {\n\t\t\tvar style = this.getStyle();\n\t\t\t\t\t\tvar styler = this.viewer[ style ];\n\n\t\t\tif ( typeof styler !== 'function' ) {\n\t\t\t\tconsole.error( \"! Error: style '\" + style + \"' is not a valid method of PV Viewer\", this.viewer );\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tstyler = styler.bind( this.viewer );\n\n\t\t\tif ( options ) {\n\t\t\t\tstyler( name, view, options );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstyler( name, view );\n\t\t\t}\n\t\t},\n\t\trender: function(){\n\t\t\tvar self = this;\n\t\t\tvar v = this.viewer;\n\n\t\t\tvar structure = this.pdb.get('pvStructure');\n\n\t\t\tthis.structureObjectView.render();\n\n\t\t\tv.clear();\n\n\t\t\tvar colorer = this.getColorer();\n\t\t\tcolorer();\n\n\t\t\tvar focusChainCode = this.structureObjectList.focusChainCode;\n\t\t\tif ( focusChainCode ) {\n\t\t\t\tconsole.log( \"Fitting to chain \" + focusChainCode );\n\t\t\t\tv.fitTo( structure.select( { chain: focusChainCode } ) );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log( \"Focus chainCode not set, fitting to structure...\" );\n\t\t\t\tv.fitTo( structure );\n\t\t\t}\n\n\t\t},\n\t\tcolorByChopping: function() {\n\t\t\tconsole.log( \"colorByChopping\", this );\n\t\t\tvar self = this;\n\t\t\tvar v = this.viewer;\n\t\t\tvar structure = this.pdb.get( 'pvStructure' );\n\n\t\t\tvar objectList = this.structureObjectList;\n\n\t\t\tobjectList.forEach( function(obj) {\n\t\t\t\tvar segs = obj.get('segments');\n\t\t\t\tvar colorname = obj.get('color');\n\t\t\t\tvar c = pv.color.uniform( colorname );\n\t\t\t\t//console.log( \"colorByChopping.obj\", obj.toJSON() );\n\t\t\t\tsegs.forEach( function(seg) {\n\t\t\t\t\tvar segView = seg.getMolView( structure );\n\t\t\t\t\tvar uid = 'obj' + obj.cid + '-seg' + seg.cid;\n\t\t\t\t\t//console.log( \"colorByChopping.seg\", uid, seg.toJSON(), segView.atomCount(), colorname );\n\t\t\t\t\tself.styleView( uid, segView, { color: c } );\n\t\t\t\t})\n\t\t\t});\n\t\t\treturn this;\n\t\t},\n\t\tcolorBySS: function() {\n\t\t\tvar self = this,\n\t\t\t\tv = this.viewer,\n\t\t\t\tstructure = this.pdb.get('pvStructure');\n\n\t\t\tvar c = pv.color.bySS();\n\t\t\tself.styleView( 'ss', structure, { color: c } );\n\t\t}\n    });\n\n\tvar pdbViewer = new app.App();\n\n  // new code to highlight atom\n\n  function setColorForAtom(go, atom, color) {\n      var view = go.structure().createEmptyView();\n      view.addAtom(atom);\n      go.colorBy(pv.color.uniform(color), view);\n  }\n\n  // variable to store the previously picked atom. Required for resetting the color\n  // whenever the mouse moves.\n  var prevPicked = null;\n  // add mouse move event listener to the div element containing the viewer. Whenever\n  // the mouse moves, use viewer.pick() to get the current atom under the cursor.\n  parent.addEventListener('mousemove', function(event) {\n      var rect = this.viewer.boundingClientRect();\n      var picked = this.viewer.pick({ x : event.clientX - rect.left,\n                                 y : event.clientY - rect.top });\n      if (prevPicked !== null && picked !== null &&\n          picked.target() === prevPicked.atom) {\n        return;\n      }\n      if (prevPicked !== null) {\n        // reset color of previously picked atom.\n        setColorForAtom(prevPicked.node, prevPicked.atom, prevPicked.color);\n      }\n      if (picked !== null) {\n        var atom = picked.target();\n        document.getElementById('picked-atom-name').innerHTML = atom.qualifiedName();\n        // get RGBA color and store in the color array, so we know what it was\n        // before changing it to the highlight color.\n        var color = [0,0,0,0];\n        picked.node().getColorForAtom(atom, color);\n        prevPicked = { atom : atom, color : color, node : picked.node() };\n\n        setColorForAtom(picked.node(), atom, 'red');\n      } else {\n        document.getElementById('picked-atom-name').innerHTML = '&nbsp;';\n        prevPicked = null;\n      }\n      this.viewer.requestRedraw();\n  });\n\n\n\n    </script>\n\n</body>\n</html>\n","markerStore":{"nextMarkerId":9962,"markersById":{"0":{"range":{"start":{"row":109,"column":30},"end":{"row":109,"column":30}},"properties":{"type":"selection","editorId":47,"goalScreenRange":null,"preserveFolds":true,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"467":{"range":{"start":{"row":147,"column":43},"end":{"row":147,"column":43}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"799":{"range":{"start":{"row":147,"column":43},"end":{"row":147,"column":43}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"841":{"range":{"start":{"row":147,"column":43},"end":{"row":147,"column":43}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"2837":{"range":{"start":{"row":19,"column":0},"end":{"row":20,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2838":{"range":{"start":{"row":34,"column":0},"end":{"row":35,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2839":{"range":{"start":{"row":84,"column":0},"end":{"row":85,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2840":{"range":{"start":{"row":92,"column":0},"end":{"row":95,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2841":{"range":{"start":{"row":124,"column":0},"end":{"row":125,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2842":{"range":{"start":{"row":175,"column":0},"end":{"row":176,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2843":{"range":{"start":{"row":179,"column":0},"end":{"row":180,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2844":{"range":{"start":{"row":183,"column":0},"end":{"row":184,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2845":{"range":{"start":{"row":187,"column":0},"end":{"row":188,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2846":{"range":{"start":{"row":195,"column":0},"end":{"row":196,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2847":{"range":{"start":{"row":228,"column":0},"end":{"row":229,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2848":{"range":{"start":{"row":233,"column":0},"end":{"row":234,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2849":{"range":{"start":{"row":238,"column":0},"end":{"row":239,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2850":{"range":{"start":{"row":240,"column":0},"end":{"row":241,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2851":{"range":{"start":{"row":259,"column":0},"end":{"row":260,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2852":{"range":{"start":{"row":327,"column":0},"end":{"row":328,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2853":{"range":{"start":{"row":375,"column":0},"end":{"row":376,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2854":{"range":{"start":{"row":378,"column":0},"end":{"row":379,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2855":{"range":{"start":{"row":402,"column":0},"end":{"row":403,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2856":{"range":{"start":{"row":419,"column":0},"end":{"row":420,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2857":{"range":{"start":{"row":442,"column":0},"end":{"row":443,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2858":{"range":{"start":{"row":447,"column":0},"end":{"row":448,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2859":{"range":{"start":{"row":468,"column":0},"end":{"row":470,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2860":{"range":{"start":{"row":478,"column":0},"end":{"row":479,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2861":{"range":{"start":{"row":488,"column":0},"end":{"row":489,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2862":{"range":{"start":{"row":496,"column":0},"end":{"row":497,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2863":{"range":{"start":{"row":540,"column":0},"end":{"row":542,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2864":{"range":{"start":{"row":557,"column":0},"end":{"row":558,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2865":{"range":{"start":{"row":564,"column":0},"end":{"row":565,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2866":{"range":{"start":{"row":568,"column":0},"end":{"row":570,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2867":{"range":{"start":{"row":612,"column":0},"end":{"row":614,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2868":{"range":{"start":{"row":647,"column":0},"end":{"row":648,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2869":{"range":{"start":{"row":666,"column":0},"end":{"row":667,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2870":{"range":{"start":{"row":683,"column":0},"end":{"row":683,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2871":{"range":{"start":{"row":684,"column":0},"end":{"row":732,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9847":{"range":{"start":{"row":19,"column":0},"end":{"row":20,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9848":{"range":{"start":{"row":34,"column":0},"end":{"row":35,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9849":{"range":{"start":{"row":72,"column":0},"end":{"row":73,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9850":{"range":{"start":{"row":84,"column":0},"end":{"row":85,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9851":{"range":{"start":{"row":92,"column":0},"end":{"row":95,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9852":{"range":{"start":{"row":106,"column":0},"end":{"row":107,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9853":{"range":{"start":{"row":109,"column":0},"end":{"row":110,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9854":{"range":{"start":{"row":124,"column":0},"end":{"row":125,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9855":{"range":{"start":{"row":175,"column":0},"end":{"row":176,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9856":{"range":{"start":{"row":179,"column":0},"end":{"row":180,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9857":{"range":{"start":{"row":183,"column":0},"end":{"row":184,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9858":{"range":{"start":{"row":187,"column":0},"end":{"row":188,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9859":{"range":{"start":{"row":195,"column":0},"end":{"row":196,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9860":{"range":{"start":{"row":228,"column":0},"end":{"row":229,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9861":{"range":{"start":{"row":233,"column":0},"end":{"row":234,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9862":{"range":{"start":{"row":238,"column":0},"end":{"row":239,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9863":{"range":{"start":{"row":240,"column":0},"end":{"row":241,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9864":{"range":{"start":{"row":259,"column":0},"end":{"row":260,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9865":{"range":{"start":{"row":327,"column":0},"end":{"row":328,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9866":{"range":{"start":{"row":375,"column":0},"end":{"row":376,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9867":{"range":{"start":{"row":378,"column":0},"end":{"row":379,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9868":{"range":{"start":{"row":402,"column":0},"end":{"row":403,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9869":{"range":{"start":{"row":419,"column":0},"end":{"row":420,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9870":{"range":{"start":{"row":442,"column":0},"end":{"row":443,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9871":{"range":{"start":{"row":447,"column":0},"end":{"row":448,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9872":{"range":{"start":{"row":468,"column":0},"end":{"row":470,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9873":{"range":{"start":{"row":478,"column":0},"end":{"row":479,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9874":{"range":{"start":{"row":488,"column":0},"end":{"row":489,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9875":{"range":{"start":{"row":496,"column":0},"end":{"row":497,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9876":{"range":{"start":{"row":540,"column":0},"end":{"row":542,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9877":{"range":{"start":{"row":557,"column":0},"end":{"row":558,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9878":{"range":{"start":{"row":564,"column":0},"end":{"row":565,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9879":{"range":{"start":{"row":568,"column":0},"end":{"row":570,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9880":{"range":{"start":{"row":612,"column":0},"end":{"row":614,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9881":{"range":{"start":{"row":647,"column":0},"end":{"row":648,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9882":{"range":{"start":{"row":666,"column":0},"end":{"row":667,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9883":{"range":{"start":{"row":684,"column":0},"end":{"row":731,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"9884":{"range":{"start":{"row":731,"column":0},"end":{"row":731,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":1313,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/cath/homes2/zcapamu/webserver/pv-chopping/domchop.html","modifiedWhenLastPersisted":true,"digestWhenLastPersisted":"a05ac0f76ca9b0883217914647747546bc76fe3f","deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":46,"items":[{"id":47,"softTabs":true,"displayBuffer":{"id":48,"softWrapped":false,"scrollTop":1113,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/cath/homes2/zcapamu/webserver/pv-chopping/domchop.html","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/cath/homes2/zcapamu/webserver/pv-chopping/domchop.html","focused":true,"flexScale":1,"deserializer":"Pane"},"activePaneId":46,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-html","language-javascript","language-css","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["data","cv-pdb-viewer","parseCgiParam","decodeURIComponent","backbone.model.extend","document.getElementById","getElementById","go","_."],"replaceHistory":[],"pathsHistory":[]},"fuzzy-finder":{"/cath/homes2/zcapamu/webserver/pv-chopping/domchop.html":1440409512368},"keybinding-resolver":{},"metrics":{"sessionLength":138463},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/cath/homes2/zcapamu/webserver/pv-chopping":{"isExpanded":true,"entries":{}}},"selectedPath":"/cath/homes2/zcapamu/webserver/pv-chopping","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"browser-plus":{"history":[],"fav":[]}}}