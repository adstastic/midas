'use strict';

// Variables

var foo = 'bar';
var bar = 123;
var baz = true;
var qux = /^foo\/*bar$/;

var foo = [1, 2, 3];
var bar = {
    baz: 'qux'
};
var baz = null;
var qux = undefined;

// Functions

function foo(bar, baz) {
    return 'bar';
}
var qux = foo('foo', 123);

// Objects/Inheritance

var foo = new Date();

// Conditions/Operators

if (foo === bar) {}
if (foo == bar) {}
if (foo > bar) {}
if (foo < bar) {}
if (foo && bar || baz) {}

switch (foo) {
    case 'bar':
        // ...
        break;
    case 123:
        // ...
        break;
    default:
        // ...
        break;
}

// Loops

for (var i = 0; i < 100; i++) {}

for (var foo in bar) {}

while (true) {}

// ...

// ...

// ...

// ...

// ...

// ...

// ...

// ...
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9jYXRoL2hvbWVzMi96Y2FwYW11Ly5hdG9tL3BhY2thZ2VzL2J1cm4vdGVzdHMvamF2YXNjcmlwdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7Ozs7QUFJYixJQUFJLEdBQUcsR0FBRyxLQUFLLENBQUM7QUFDaEIsSUFBSSxHQUFHLEdBQUcsR0FBRyxDQUFDO0FBQ2QsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDO0FBQ2YsSUFBSSxHQUFHLEdBQUcsYUFBYSxDQUFDOztBQUV4QixJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDcEIsSUFBSSxHQUFHLEdBQUc7QUFDTixPQUFHLEVBQUUsS0FBSztDQUNiLENBQUE7QUFDRCxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUM7QUFDZixJQUFJLEdBQUcsR0FBRyxTQUFTLENBQUM7Ozs7QUFJcEIsU0FBUyxHQUFHLENBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRTtBQUNwQixXQUFPLEtBQUssQ0FBQztDQUNoQjtBQUNELElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7Ozs7QUFJMUIsSUFBSSxHQUFHLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQzs7OztBQUlyQixJQUFJLEdBQUcsS0FBSyxHQUFHLEVBQUUsRUFFaEI7QUFDRCxJQUFJLEdBQUcsSUFBSSxHQUFHLEVBQUUsRUFFZjtBQUNELElBQUksR0FBRyxHQUFHLEdBQUcsRUFBRSxFQUVkO0FBQ0QsSUFBSSxHQUFHLEdBQUcsR0FBRyxFQUFFLEVBRWQ7QUFDRCxJQUFJLEdBQUcsSUFBSSxHQUFHLElBQUksR0FBRyxFQUFFLEVBRXRCOztBQUVELFFBQVEsR0FBRztBQUNYLFNBQUssS0FBSzs7QUFFTixjQUFNO0FBQUEsU0FDTCxHQUFHOztBQUVKLGNBQUs7QUFBQTs7QUFHTCxjQUFNO0FBQUEsQ0FDVDs7OztBQUlELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxFQUFHLEVBQUUsRUFFOUI7O0FBRUQsS0FBSyxJQUFJLEdBQUcsSUFBSSxHQUFHLEVBQUUsRUFFcEI7O0FBRUQsT0FBTyxJQUFJLEVBQUUsRUFFWiIsImZpbGUiOiIvY2F0aC9ob21lczIvemNhcGFtdS8uYXRvbS9wYWNrYWdlcy9idXJuL3Rlc3RzL2phdmFzY3JpcHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vIFZhcmlhYmxlc1xuXG52YXIgZm9vID0gXCJiYXJcIjtcbnZhciBiYXIgPSAxMjM7XG52YXIgYmF6ID0gdHJ1ZTtcbnZhciBxdXggPSAvXmZvb1xcLypiYXIkLztcblxudmFyIGZvbyA9IFsxLCAyLCAzXTtcbnZhciBiYXIgPSB7XG4gICAgYmF6OiAncXV4J1xufVxudmFyIGJheiA9IG51bGw7XG52YXIgcXV4ID0gdW5kZWZpbmVkO1xuXG4vLyBGdW5jdGlvbnNcblxuZnVuY3Rpb24gZm9vIChiYXIsIGJheikge1xuICAgIHJldHVybiBcImJhclwiO1xufVxudmFyIHF1eCA9IGZvbygnZm9vJywgMTIzKTtcblxuLy8gT2JqZWN0cy9Jbmhlcml0YW5jZVxuXG52YXIgZm9vID0gbmV3IERhdGUoKTtcblxuLy8gQ29uZGl0aW9ucy9PcGVyYXRvcnNcblxuaWYgKGZvbyA9PT0gYmFyKSB7XG4gICAgLy8gLi4uXG59XG5pZiAoZm9vID09IGJhcikge1xuICAgIC8vIC4uLlxufVxuaWYgKGZvbyA+IGJhcikge1xuICAgIC8vIC4uLlxufVxuaWYgKGZvbyA8IGJhcikge1xuICAgIC8vIC4uLlxufVxuaWYgKGZvbyAmJiBiYXIgfHwgYmF6KSB7XG4gICAgLy8gLi4uXG59XG5cbnN3aXRjaCAoZm9vKSB7XG5jYXNlICdiYXInOlxuICAgIC8vIC4uLlxuICAgIGJyZWFrO1xuY2FzZSAxMjM6XG4gICAgLy8gLi4uXG4gICAgYnJlYWtcbmRlZmF1bHQ6XG4gICAgLy8gLi4uXG4gICAgYnJlYWs7XG59XG5cbi8vIExvb3BzXG5cbmZvciAodmFyIGkgPSAwOyBpIDwgMTAwOyBpICsrKSB7XG4gICAgLy8gLi4uXG59XG5cbmZvciAodmFyIGZvbyBpbiBiYXIpIHtcbiAgICAvLyAuLi5cbn1cblxud2hpbGUgKHRydWUpIHtcbiAgICAvLyAuLi5cbn1cbiJdfQ==